[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "reprexlite"
version = "1.0.0"
description = "Render reproducible examples of Python code for sharing."
readme = "README.md"
authors = [{ name = "Jay Qi", email = "jayqi.opensource@gmail.com" }]
license = { file = "LICENSE" }
keywords = ["reprex", "reproducible examples"]
classifiers = [
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.7"
dependencies = [
  "importlib_metadata ; python_version < '3.8'",
  "libcst",
  "typer",
  "typing_extensions>4 ; python_version < '3.11'",
]

[project.optional-dependencies]
black = ["black"]
pygments = ["Pygments"]
ipython = ["ipython"]
tests = ["pytest"]

[project.scripts]
reprex = "reprexlite.cli:app"

[project.urls]
"Repository" = "https://github.com/jayqi/reprexlite"
"Documentation" = "https://jayqi.github.io/reprexlite/"
"Bug Tracker" = "https://github.com/jayqi/reprexlite/issues"
"Changelog" = "https://jayqi.github.io/reprexlite/stable/changelog/"

[tool.hatch.build]
exclude = ["docs/"]

## DEFAULT ENVIRONMENT ##

[tool.hatch.envs.default]
dependencies = ["black", "ipython", "mypy", "ruff", "tqdm"]
python = "3.10"
path = ".venv"

[tool.hatch.envs.default.scripts]
lint = ["black --check reprexlite tests", "ruff check reprexlite tests"]
typecheck = ["mypy reprexlite --install-types --non-interactive"]

## TESTS ENVIRONMENT ##

[tool.hatch.envs.tests]
features = ["tests"]
dependencies = ["coverage", "pytest-cov"]
template = "tests"

[[tool.hatch.envs.tests.matrix]]
python = ["3.7", "3.8", "3.9", "3.10", "3.11"]

[[tool.hatch.envs.tests.matrix]]
python = ["3.10"]
extras = ["black", "ipython", "pygments"]

[tool.hatch.envs.tests.overrides]
matrix.extras.features = [
  { value = "black", if = [
    "black",
  ] },
  { value = "ipython", if = [
    "ipython",
  ] },
  { value = "pygments", if = [
    "pygments",
  ] },
]

[tool.hatch.envs.tests.scripts]
run = "pytest tests"
run-cov = "run --cov=reprexlite --cov-report=term --cov-report=html --cov-report=xml"
run-debug = "run --pdb"


## DOCS ENVIRONMENT ##

[tool.hatch.envs.docs]
dependencies = [
  "mkdocs",
  "mkdocs-material",
  "mike",
  "mkdocstrings[python]",
  "mdx-truly-sane-lists",
]
template = "docs"

[tool.hatch.envs.docs.scripts]
build = [
  "rm -rf site/",
  "cp README.md docs/index.md",
  "cp CHANGELOG.md docs/changelog.md",
  "mkdocs build",
]


## TOOLS ##

[tool.black]
line-length = 99
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | tests/assets
)/
'''

[tool.ruff]
line-length = 99
select = [
  "E", # Pyflakes
  "F", # Pycodestyle
  "I", # isort
]
src = ["reprexlite", "tests"]
exclude = ["tests/assets"]
unfixable = ["F"]

[tool.ruff.isort]
known-first-party = ["reprexlite"]
known-third-party = ["IPython"]
force-sort-within-sections = true

[tool.mypy]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]

[tool.coverage.run]
source = ["reprexlite"]
